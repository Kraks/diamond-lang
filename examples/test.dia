//def polyId[T^z <: Top^<>](x: T^<>): T^x = x;
//val three = polyId[Int](3);
//val cell1 = Ref three;
//val cell2 = polyId[Ref[Int]^<>](cell1);
//val cell3 = polyId[Ref[Int]^<>](Ref 5);
//(! cell2) + (! cell3) // 3 + 5
//def id(x: Ref[Int]^<>): Ref[Int]^x = Ref 42;
//id
//def f3(x: Int): (g() => Ref[Int]^g)^<> =
//  val c = Ref x;
//  def g(): Ref[Int]^g = c;
//  g;
//f3(0)
def fst[A^a <: Top^<>, B^b <: Top^{a, <>}](p: (forall p[C^c <: Top] => (f((x: A^<>, y: B^{x, <>}) => C^{x, y}) => C^f)^p)^{a, b}) = {
  p[A]((x: A^<>, y: B^{x, <>}) => { x })
};
fst
